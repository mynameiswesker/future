{"version":3,"sources":["Components/Fetching.js","Components/Arrow.js","Components/Card.js","Components/Pagination.js","Components/Table.js","Actions/search.js","Actions/showCard.js","Components/App.js","Actions/getBigData.js","Actions/getLittleData.js","Actions/sortUp.js","serviceWorker.js","Reducers/getData.js","Reducers/filterData.js","Reducers/root.js","store.js","index.js"],"names":["Fetching","className","Arrow","arrow","Card","info","firstName","lastName","defaultValue","description","address","streetAddress","city","state","zip","Pagination","postPerPaige","totalPosts","paginate","paigeNumbers","i","Math","ceil","push","map","number","key","onClick","href","connect","filterData","dispatch","getSearch","text","data","type","payload","search","getCard","item","showCard","sort","forwardBool","arrowProp","useState","currenPagination","setCurrentPagination","currentPostPerPagin","inputText","setInputText","sortUp","th_name","forward","card","indexOfLastPost","indexOfFirstPost","currentPosts","slice","placeholder","onChange","e","target","value","preventDefault","showItem","id","email","phone","length","pageNamber","getData","getbigdata","axios","get","then","catch","resError","getlittledata","getSort","name","isFetching","error","isError","searchData","message","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","_","orderBy","filter","toLowerCase","includes","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.eba0578f.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Styles/fetching.css'\r\n\r\nconst Fetching =() => {\r\n\r\n  return (\r\n    <div className=\"ui loading form\"></div>\r\n  );\r\n\r\n}\r\n\r\nexport default Fetching;","import React from 'react';\r\n\r\nconst Arrow =({arrow}) => {\r\n\r\n    if(arrow === 'desc'){\r\n        return(\r\n            <i className=\"sort up icon\"></i>\r\n        )\r\n    }\r\n\r\n    if(arrow === 'asc'){\r\n        return(\r\n            <i className=\"sort down icon\"></i>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <i className=\"sort icon\"></i>\r\n    )\r\n\r\n}\r\n\r\nexport default Arrow;","import React from 'react';\r\n\r\nconst Card =({info}) => {\r\n\r\n  return (\r\n    <div className=\"ui card\">\r\n        <p>\r\n            Выбран пользователь <b>{info.firstName + \" \" + info.lastName}</b>\r\n        </p>\r\n        <p>Описание:</p>\r\n        <textarea defaultValue={info.description} />\r\n        <p>\r\n            Адрес проживания: <b>{info.address.streetAddress}</b>\r\n        </p>\r\n        <p>\r\n            Город: <b>{info.address.city}</b>\r\n        </p>\r\n        <p>\r\n            Провинция/штат: <b>{info.address.state}</b>\r\n        </p>\r\n        <p>\r\n            Индекс: <b>{info.address.zip}</b>\r\n        </p>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst Pagination =({postPerPaige,totalPosts,paginate}) => {\r\n\r\n    const paigeNumbers = [];\r\n\r\n    for(let i=1; i<= Math.ceil(totalPosts / postPerPaige); i++){\r\n        paigeNumbers.push(i)\r\n    }\r\n\r\n    return(\r\n        <nav>\r\n            <ul className=\"ui pagination menu\">\r\n                {paigeNumbers.map(number=>{\r\n                    return(\r\n                        <li key={number}>\r\n                            <a onClick={()=> paginate(number)} href=\"#\" className=\"item\">{number} </a>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React,{useState} from 'react';\r\nimport Arrow from './Arrow'\r\nimport {connect} from 'react-redux'\r\nimport {search} from '../Actions/search'\r\nimport {showCard} from '../Actions/showCard'\r\nimport Card from './Card'\r\nimport Pagination from '../Components/Pagination'\r\n\r\nconst Table =({data,sort,forwardBool,arrowProp,getSearch,getCard,filterData}) => {\r\n\r\n    const [currenPagination,setCurrentPagination] = useState(1);//Кол-во постов\r\n    const [currentPostPerPagin] = useState(50);//кол-во постов в пагинации\r\n    const [inputText, setInputText] = useState('');//inputText - состояние введенного текста внутри\r\n    const changeInputText = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    let sortUp = (th_name,forward) => {//1 арг - имя th. 2 арг - если sort в сторе true/false для каждого свое значение asc/desc\r\n        sort(th_name,forward)\r\n    }\r\n\r\n    const sendText = (e) => {\r\n        e.preventDefault()\r\n        getSearch(inputText,data)\r\n    }\r\n\r\n    const showItem = (item) => {\r\n        getCard(item)\r\n    }\r\n\r\n    const item = filterData.card;// клиент при клике\r\n    const indexOfLastPost = currenPagination * currentPostPerPagin //индекс полседнего элемента пагинации\r\n    const indexOfFirstPost = indexOfLastPost - currentPostPerPagin //индекс 1 эл та пагинации\r\n    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost)//массив для 1 окна\r\n\r\n    //функция при клике по пагинации тега а \r\n\r\n    const paginate = (pageNamber) => setCurrentPagination(pageNamber)\r\n\r\n  return (\r\n    <>\r\n        <form className=\"ui form\">\r\n            <div className=\"field\">\r\n                <label>Search</label>\r\n                <input type=\"text\" placeholder=\"Enter text ...\" onChange={changeInputText}/>\r\n            </div>\r\n            <button className=\"ui button\" onClick={sendText}>Submit</button>\r\n        </form>\r\n\r\n    <table className=\"ui celled table\">\r\n        <thead>\r\n            <tr>\r\n                <th onClick={()=>sortUp('id',`${forwardBool ? 'asc' : 'desc'}`)}>ID</th>\r\n                <th onClick={()=>sortUp('firstName',`${forwardBool ? 'asc' : 'desc'}`)}>First Name</th>\r\n                <th onClick={()=>sortUp('lastName',`${forwardBool ? 'asc' : 'desc'}`)}>Last Name</th>\r\n                <th onClick={()=>sortUp('email',`${forwardBool ? 'asc' : 'desc'}`)}>E-mail</th>\r\n                <th onClick={()=>sortUp('phone',`${forwardBool ? 'asc' : 'desc'}`)}>Phone</th>\r\n                <th><Arrow arrow={arrowProp}/></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            { currentPosts.map((item,i) =>(//массив\r\n                <tr key={i} className=\"tr_hover\" onClick={()=>{showItem(item)}}>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.firstName}</td>\r\n                    <td>{item.lastName}</td>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.phone}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n\r\n    {item.id ? <Card info={item}/> : null}\r\n\r\n    <Pagination postPerPaige={currentPostPerPagin} totalPosts={data.length} paginate={paginate} />\r\n\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nconst mapStateToProps = ({filterData}) => ({\r\n    filterData\r\n  })\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return{\r\n      getSearch: (text,data) => dispatch(search(text,data)),\r\n      getCard: item => dispatch(showCard(item))\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Table);","export function search(text,data){\r\n    return{\r\n        type:\"SEARCH\",\r\n        payload:{\r\n            text:text,\r\n            data:data\r\n        }\r\n    }\r\n}","export function showCard(item){\r\n    return{\r\n        type:\"SHOW_CARD\",\r\n        payload:item\r\n    }\r\n}","import React from 'react';\nimport {connect} from 'react-redux'\nimport {getBigData} from '../Actions/getBigData'\nimport {sortUp} from '../Actions/sortUp'\nimport {getLittleData} from '../Actions/getLittleData'\nimport Fetching from '../Components/Fetching'\nimport Table from '../Components/Table'\n\nexport const App =({getData,getbigdata,getlittledata,getSort,filterData}) => {\n\n  let data = getData.data;//данные таблицы\n\n  let isFetching = getData.isFetching;//индикатор загрузки\n\n  let error = getData.isError//ошибка при загрузке\n\n  let forwardBool = getData.sort//true/false \n\n  let arrowProp = getData.arrow// в стайте default (asc,desc при нажатии на th сортировка)\n\n  let text = filterData.text // введенный текст пользователем\n\n  let searchData = filterData.data // найденный массив данных таблицы\n\n  if(text.length && searchData.length){//если что то ищем ...\n    return(\n      <Table data={searchData} sort={getSort} forwardBool={forwardBool} arrowProp={arrowProp} />\n    )\n  }\n\n  if(error.message){\n    return(\n      <div className=\"error\">\n        {error.message}\n      </div>\n    )\n  }\n  \n  return (// если не ищем а загружаем и смотрим\n    <>\n      <div className=\"App\">\n          <button onClick={getlittledata}>little data</button>\n          <button onClick={getbigdata}>big data</button>\n      </div>\n\n      {isFetching ? <Fetching /> : null}\n\n      {data.length ? <Table data={data} sort={getSort} forwardBool={forwardBool} arrowProp={arrowProp} /> : null}\n</>\n  );\n}\n\nconst mapStateToProps = ({getData,filterData}) => ({\n  getData,\n  filterData\n})\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    getbigdata: ()=> dispatch(getBigData()),\n    getlittledata: ()=> dispatch(getLittleData()),\n    getSort: (name,forward)=> dispatch(sortUp(name,forward)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import axios from 'axios'\r\n\r\nexport function getBigData(){\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type:\"GET_DATA_REQUEST\",//запрос\r\n            payload:null\r\n        })\r\n\r\n            axios.get('http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}')\r\n            .then(data=>dispatch({\r\n                type:\"GET_DATA_SUCCESS\",//успех\r\n                payload:data.data\r\n            }))\r\n            .catch(resError=>dispatch({\r\n                type:\"GET_DATA_ERROR\",\r\n                payload:resError\r\n            }))\r\n\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport function getLittleData(){\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type:\"GET_DATA_REQUEST\",//запрос\r\n            payload:null\r\n        })\r\n            axios.get('http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}')\r\n            .then(data=>dispatch({\r\n                type:\"GET_DATA_SUCCESS\",//успех\r\n                payload:data.data\r\n            }))\r\n            .catch(resError=>dispatch({\r\n                type:\"GET_DATA_ERROR\",\r\n                payload:resError\r\n            }))\r\n\r\n    }\r\n}","export function sortUp(name,forward){\r\n    return{\r\n        type:\"SORT\",\r\n        payload:{\r\n            name:name,\r\n            forward:forward,\r\n        }\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import _ from 'lodash';\r\n\r\nconst initialState = {\r\n    data:[],\r\n    isFetching:false,\r\n    isError:\"\",\r\n    sort:true,\r\n    arrow:'default',\r\n}\r\n\r\nexport function getData(state = initialState, action){\r\n    switch(action.type){\r\n        case \"GET_DATA_REQUEST\":\r\n            return{...state, isFetching:true}\r\n        case \"GET_DATA_SUCCESS\":\r\n            return{...state, data:action.payload, isFetching:false}\r\n        case \"GET_DATA_ERROR\":\r\n            return{...state, isError:action.payload, isFetching:false}\r\n        case \"SORT\":\r\n            return{...state, data:_.orderBy(state.data,action.payload.name,action.payload.forward),sort:!state.sort,arrow:action.payload.forward}  \r\n        default:\r\n            return state        \r\n    }\r\n}","import _ from 'lodash';\r\n\r\nconst initialState = {\r\n    text:'',\r\n    data:[],\r\n    card:[]\r\n}\r\n\r\nexport function filterData(state = initialState, action){\r\n    switch(action.type){\r\n        case \"SEARCH\":\r\n            return{...state, text:action.payload.text, data:action.payload.data.filter(item => {\r\n                return item['firstName'].toLowerCase().includes(action.payload.text.toLowerCase())\r\n                  || item['lastName'].toLowerCase().includes(action.payload.text.toLowerCase())\r\n                  || item['email'].toLowerCase().includes(action.payload.text.toLowerCase())\r\n                  || item['phone'].toLowerCase().includes(action.payload.text.toLowerCase())\r\n                  || (item.id === +action.payload.text)\r\n              })}\r\n        case \"SHOW_CARD\":\r\n            return{...state, card:action.payload}\r\n        case \"SORT\":\r\n                return{...state, data:_.orderBy(state.data,action.payload.name,action.payload.forward),sort:!state.sort,arrow:action.payload.forward}    \r\n        default:\r\n            return state        \r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport {getData} from './getData'\r\nimport {filterData} from './filterData'\r\n\r\nexport const rootReducer = combineReducers({\r\n    getData,\r\n    filterData\r\n})","import {createStore,applyMiddleware} from 'redux'\r\nimport {rootReducer} from './Reducers/root'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk,logger));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport {store} from './store'\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}